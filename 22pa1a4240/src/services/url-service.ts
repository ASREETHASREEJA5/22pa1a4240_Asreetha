// This is an autogenerated file from Firebase Studio.

import type { ShortenedUrl, ClickData } from '@/types';

// In-memory "database"
const urls: Map<string, ShortenedUrl> = new Map();

export const findUrlByShortcode = (shortcode: string): ShortenedUrl | undefined => {
  return urls.get(shortcode);
};

export const getAllUrls = (): ShortenedUrl[] => {
  return Array.from(urls.values()).sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());
};

export const saveUrl = (url: ShortenedUrl): void => {
  urls.set(url.shortcode, url);
};

export const addClick = (shortcode: string, source: string): void => {
    const url = findUrlByShortcode(shortcode);
    if (url) {
        url.clicks += 1;
        url.clickData.push({
            timestamp: new Date().toISOString(),
            source,
        });
        saveUrl(url);
    }
}

// Example data for demonstration
const now = new Date();
const exampleUrls: ShortenedUrl[] = [
    {
        id: '1',
        longUrl: 'https://google.com',
        shortcode: 'g',
        shortUrl: '/g',
        createdAt: now.toISOString(),
        expiresAt: new Date(now.getTime() + 30 * 60000).toISOString(),
        clicks: 10,
        clickData: [{ timestamp: now.toISOString(), source: 'Direct' }]
    },
    {
        id: '2',
        longUrl: 'https://github.com',
        shortcode: 'gh',
        shortUrl: '/gh',
        createdAt: new Date(now.getTime() - 60000).toISOString(),
        expiresAt: new Date(now.getTime() + 60 * 60000).toISOString(),
        clicks: 25,
        clickData: [{ timestamp: now.toISOString(), source: 'Google' }]
    }
];

exampleUrls.forEach(url => {
    const origin = typeof window !== 'undefined' ? window.location.origin : 'http://localhost:9002';
    url.shortUrl = `${origin}/${url.shortcode}`;
    saveUrl(url);
});