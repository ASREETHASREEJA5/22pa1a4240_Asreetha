// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview An AI agent that suggests a shortcode for a given URL.
 *
 * - suggestShortcode - A function that suggests a shortcode for a given URL.
 * - SuggestShortcodeInput - The input type for the suggestShortcode function.
 * - SuggestShortcodeOutput - The return type for the suggestShortcode function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestShortcodeInputSchema = z.object({
  url: z
    .string()
    .url()
    .describe('The original long URL to be shortened.'),
});
export type SuggestShortcodeInput = z.infer<typeof SuggestShortcodeInputSchema>;

const SuggestShortcodeOutputSchema = z.object({
  shortcode: z
    .string()
    .regex(/^[a-zA-Z0-9]+$/)
    .describe('A suggested shortcode for the given URL.  Must be alphanumeric.'),
});
export type SuggestShortcodeOutput = z.infer<typeof SuggestShortcodeOutputSchema>;

export async function suggestShortcode(input: SuggestShortcodeInput): Promise<SuggestShortcodeOutput> {
  return suggestShortcodeFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestShortcodePrompt',
  input: {schema: SuggestShortcodeInputSchema},
  output: {schema: SuggestShortcodeOutputSchema},
  prompt: `You are an expert URL shortener.  Given a URL, suggest a shortcode that is:

- Alphanumeric
- Non-offensive
- Relatively short
- Related to the URL, if possible

URL: {{{url}}}

Shortcode:`, // No Handlebars if/else
});

const suggestShortcodeFlow = ai.defineFlow(
  {
    name: 'suggestShortcodeFlow',
    inputSchema: SuggestShortcodeInputSchema,
    outputSchema: SuggestShortcodeOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
